## -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

def build(bld):
    obj = bld.create_ns3_module('c2c', ['core', 'wifi', 'network', 'internet'])
    obj.source = [
        'model/c2c-l3-protocol.cc',
        'model/c2c-l4-protocol.cc',
        'model/c2c-transport.cc',
        'model/c2cl4T-socket-factory-impl.cc',
        'model/c2cl4T-socket-factory.cc',
        'model/c2cl4T-socket.cc',
        'model/c2cl4T-socket-impl.cc',
        'model/c2c-end-point-demux.cc',
        'model/c2c-end-point.cc',
        'model/c2c-interface.cc',
        'model/channel-tag.cc',
        'model/mcs-tag.cc',
        'model/tx-power-tag.cc',
        'model/c2cTransport-header.cc',
	'model/beaconing-protocol.cc',
        'model/node-id-tag.cc',
        'model/time-stamp-tag.cc',
        'model/time-step-tag.cc',
        'model/TStep-sequence-number-tag.cc',
        'model/app-index-tag.cc',
        'model/c2c-address.cc',
        'model/c2c.cc',
        'model/c2c-common-header.cc',
        'model/c2c-list-routing.cc',
        'model/c2c-route.cc',
        'model/c2c-routing-protocol.cc',
        'model/c2c-transport.cc',
	'model/socketc2c.cc',
	'model/socket-factoryc2c.cc',
	'model/location-table.cc',
	'model/geo-routing/geo-anycast.cc',
	'model/geo-routing/geoAnycast-header.cc',
	'model/geo-routing/geoBroadAnycast-header.cc',
	'model/geo-routing/geo-broadcast.cc',
	'model/geo-routing/geoBroadcast-header.cc',
	'model/geo-routing/geo-routing.cc',
	'model/geo-routing/geo-unicast.cc',
	'model/geo-routing/geoUnicast-header.cc',
	'model/geo-routing/topo-broadcast.cc',
	'model/geo-routing/topoBroadcast-header.cc',
	'model/geo-routing/utils.cc',
        'helper/c2c-facilities-helper.cc',
        'helper/c2c-interface-container.cc',
        'helper/c2c-interface-helper.cc',
        'helper/c2c-list-routing-helper.cc',
        'helper/c2c-routing-helper.cc',
        'helper/geo-routing-helper.cc',
	'helper/C2C-IP-helper.cc',
	'helper/IPCIU-facilities-helper.cc',
	'helper/DENMhelper.cc',
	'helper/CAMmanage-helper.cc',
	'helper/application-helper.cc'
        ]

    headers = bld(features='ns3header')
    headers.module = 'c2c'
    headers.source = [
        'model/c2c-l3-protocol.h',
        'model/c2c-l4-protocol.h',
        'model/c2c-transport.h',
        'model/c2cl4T-socket-factory-impl.h',
        'model/c2cl4T-socket-factory.h',
        'model/c2cl4T-socket.h',
        'model/c2cl4T-socket-impl.h',        
        'model/c2c-end-point-demux.h',
        'model/c2c-end-point.h',
        'model/c2c-interface.h',
        'model/channel-tag.h',
        'model/mcs-tag.h',
        'model/tx-power-tag.h',
        'model/itetris-technologies.h', 
        'model/c2cTransport-header.h',
	'model/beaconing-protocol.h',
        'model/node-id-tag.h',
        'model/time-stamp-tag.h',
        'model/time-step-tag.h',
        'model/TStep-sequence-number-tag.h',
        'model/app-index-tag.h',
        'model/c2c-list-routing.h',
        'model/c2c-route.h',
        'model/c2c-routing-protocol.h',
        'model/c2c-transport.h',
	'model/socketc2c.h',
	'model/socket-factoryc2c.h',
	'model/c2c.h',
	'model/c2c-address.h',
	'model/c2c-common-header.h',
	'model/location-table.h',
	'model/geo-routing/geo-anycast.h',
	'model/geo-routing/geoAnycast-header.h',
	'model/geo-routing/geoBroadAnycast-header.h',
	'model/geo-routing/geo-broadcast.h',
	'model/geo-routing/geoBroadcast-header.h',
	'model/geo-routing/geo-routing.h',
	'model/geo-routing/geo-unicast.h',
	'model/geo-routing/geoUnicast-header.h',
	'model/geo-routing/topo-broadcast.h',
	'model/geo-routing/topoBroadcast-header.h',
	'model/geo-routing/utils.h',
        'helper/c2c-interface-container.h',
        'helper/c2c-interface-helper.h',
        'helper/c2c-list-routing-helper.h',
        'helper/c2c-routing-helper.h',
        'helper/geo-routing-helper.h',
	'helper/CAMmanage-helper.h',
	'helper/C2C-IP-helper.h',
	'helper/IPCIU-facilities-helper.h',
	'helper/DENMhelper.h',
	'helper/application-helper.h'
       ]
       
    if bld.env['ENABLE_EXAMPLES']:
	bld.recurse('examples')

    bld.ns3_python_bindings()

